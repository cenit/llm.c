name: Continuous Integration

on:
  pull_request:
  push:
  workflow_dispatch:
    inputs:
      debug_enabled:
        description: 'Run the build with tmate debugging enabled (https://github.com/marketplace/actions/debugging-with-tmate)'
        required: false
        default: false
  schedule:
    - cron: '0 6 * * *'

env:
  VCPKG_BINARY_SOURCES: 'clear;nuget,vcpkgbinarycache,readwrite'

jobs:
  ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
    - uses: lukka/get-cmake@latest
    - name: Update apt
      run: sudo apt-get update
    - name: Install dependencies
      run: sudo apt-get install build-essential -y
    - name: 'Setup vcpkg and NuGet artifacts backend'
      shell: bash
      run: >
        git clone https://github.com/microsoft/vcpkg ;
        ./vcpkg/bootstrap-vcpkg.sh ;
        mono $(./vcpkg/vcpkg fetch nuget | tail -n 1) sources add
        -Name "vcpkgbinarycache"
        -Source http://93.49.111.10:5555/v3/index.json
    - name: Setup NuGet API key if found
      shell: bash
      env:
        BAGET_API_KEY: ${{ secrets.BAGET_API_KEY }}
      if: env.BAGET_API_KEY != null
      run: >
        mono $(./vcpkg/vcpkg fetch nuget | tail -n 1)
        setapikey ${{ secrets.BAGET_API_KEY }}
        -Source http://93.49.111.10:5555/v3/index.json
    - name: Build
      run: |
        export VCPKG_ROOT=$GITHUB_WORKSPACE/vcpkg
        ls $VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake
        mkdir build
        cd build
        cmake ..
        cmake --build . --target install

  osx:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
    - uses: lukka/get-cmake@latest
    - name: 'Setup vcpkg and NuGet artifacts backend'
      shell: bash
      run: >
        git clone https://github.com/microsoft/vcpkg ;
        ./vcpkg/bootstrap-vcpkg.sh ;
        mono $(./vcpkg/vcpkg fetch nuget | tail -n 1) sources add
        -Name "vcpkgbinarycache"
        -Source http://93.49.111.10:5555/v3/index.json
    - name: Setup NuGet API key if found
      shell: bash
      env:
        BAGET_API_KEY: ${{ secrets.BAGET_API_KEY }}
      if: env.BAGET_API_KEY != null
      run: >
        mono $(./vcpkg/vcpkg fetch nuget | tail -n 1)
        setapikey ${{ secrets.BAGET_API_KEY }}
        -Source http://93.49.111.10:5555/v3/index.json
    - name: Build
      run: |
        export VCPKG_ROOT=$GITHUB_WORKSPACE/vcpkg
        ls $VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake
        mkdir build
        cd build
        cmake ..
        cmake --build . --target install

  win:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}
    - uses: lukka/get-cmake@latest
    - uses: seanmiddleditch/gha-setup-vsdevenv@master
    - name: 'Setup NuGet artifacts backend'
      shell: bash
      run: |
        "$("${VCPKG_ROOT}/vcpkg" fetch nuget | tail -n 1)" sources add -Name "vcpkgbinarycache" -Source http://93.49.111.10:5555/v3/index.json
    - name: Setup NuGet API key if found
      shell: bash
      env:
        BAGET_API_KEY: ${{ secrets.BAGET_API_KEY }}
      if: env.BAGET_API_KEY != null
      run: |
        "$("${VCPKG_ROOT}/vcpkg" fetch nuget | tail -n 1)" setapikey ${{ secrets.BAGET_API_KEY }} -Source http://93.49.111.10:5555/v3/index.json
    - name: Build
      run: |
        mkdir build
        cd build
        cmake ..
        cmake --build . --target install --config Release
